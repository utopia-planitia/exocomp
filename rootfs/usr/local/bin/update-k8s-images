#!/bin/bash

#set -eux #o pipefail

(git checkout automatic-update && git rebase origin/master) || \
git checkout -b automatic-update origin/master

for file in "$@"; do
    yq -y . "${file}" > "${file}_"
    mv "${file}_" "${file}"
done
if [ ! -z "$(git status --porcelain)" ]; then 
    git add .
    git commit -m "formated working files"
fi

images=`sort <(yq 'if (.kind == "StatefulSet" or .kind == "DaemonSet" or .kind == "Deployment") then .spec.template.spec.containers[].image else empty end' $@) <(yq 'if (.kind == "StatefulSet" or .kind == "DaemonSet" or .kind == "Deployment") then .spec.template.spec.initContainers[].image else empty end' $@) | uniq`

echo "$images" | while read imageref
do
    imageref=`echo "$imageref" | cut -d '"' -f 2` # remove " at the beginning and end
    if [[ $imageref =~ ":" ]]; then
        image=`echo $imageref | cut -d: -f1`
        oldVersion=`echo $imageref | cut -d: -f2`
    else
        image=$imageref
        oldVersion="latest"
    fi
    reg tags $image | grep -vi alpha | grep -vi beta | grep -vi snapshot | grep -E "^v?(0|[1-9]\d*){1,}\.(0|[1-9]\d*){1,}(\.(0|[1-9]\d*){1,})?(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$" > /tmp/tags
    version=`cat /tmp/tags | sed 's/v//g' | grep -E "^(0|[1-9]\d*){1,}\.(0|[1-9]\d*){1,}(\.(0|[1-9]\d*){1,})?(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$" | sort -Vr | head -n 1`
    version=`grep $version /tmp/tags`
    
    if [ ! "$version" == "" ] && [ ! "$oldVersion" == "$version"  ]; then
        for file in "$@"; do
            yq -y "walk( if type == \"object\" and .image == \"$imageref\" then .image = \"$image:$version\" else . end)" ${file} > ${file}_
            mv ${file}_ ${file}
            if test -f ./.exocomp/update-hook.sh; then
                bash ./.exocomp/update-hook.sh image "$image" "$oldVersion" "$version"
            fi
        done
        git add .
        git commit -m "updated image $image from version $oldVersion to $version"
    fi
done

if ! git diff --exit-code origin/master..automatic-update > /dev/null; then
    git push origin automatic-update --force-with-lease
    if ! lab mr list -l exocomp | grep .; then
        lab mr create --allow-collaboration -l exocomp -m "automated updates" --remove-source-branch
    fi
fi
